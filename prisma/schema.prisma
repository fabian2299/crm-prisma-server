generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  nombre        String
  apellido      String
  email         String      @unique
  password      String

  clientes      Cliente[]
  pedidos       Pedido[]
}

model Cliente {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  nombre        String
  apellido      String
  empresa       String
  email         String      @unique
  telefono      String?

  vendedor      Usuario     @relation(fields: [vendedorId], references: [id])
  vendedorId    Int

  pedidos       Pedido[]
}

model Producto {
  id                  Int                @id @default(autoincrement())
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt

  nombre              String
  existencia          Int
  precio              Float

  productoAPedir      ProductoAPedir[]
}

model Pedido {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  nombre        String
  total         Float
  estado        Estado      @default(PENDIENTE)

  cliente       Cliente     @relation(fields: [clienteId], references: [id])
  clienteId     Int
  vendedor      Usuario     @relation(fields: [vendedorId], references: [id])
  vendedorId    Int

  articulos     ProductoAPedir[]
}


model ProductoAPedir {
  id            Int        @id @default(autoincrement())
  cantidad      Int

  pedido        Pedido?     @relation(fields: [pedidoId], references: [id])
  pedidoId      Int?        

  producto      Producto?     @relation(fields: [productoId], references: [id])
  productoId    Int?
}

enum Estado {
  PENDIENTE
  COMPLETADO
  CANCELADO
}